{"version":3,"sources":["components/EmployeeForm.js","components/EmployeeList.js","utils/API.js","components/EmployeeContainer.js","App.js","index.js"],"names":["EmployeeForm","props","htmlFor","onChange","handleInputChange","value","search","name","type","className","placeholder","id","styles","textAlign","EmployeeList","this","employees","style","map","employee","index","src","picture","thumbnail","alt","first","last","email","phone","dob","date","React","Component","axios","get","backgroundColor","display","justifyContent","padding","marginBottom","color","EmployeeContainer","state","employeesList","getEmployee","API","then","res","data","results","sort","sortArr","setState","console","log","catch","err","event","target","toLowerCase","length","filteredEmployees","filter","includes","a","b","textA","toUpperCase","textB","App","ReactDOM","render","document","getElementById"],"mappings":"6OAqBeA,MAnBf,SAAsBC,GACpB,OACE,+BACE,gCACE,uBAAOC,QAAQ,SAAf,qBACA,uBACEC,SAAUF,EAAMG,kBAChBC,MAAOJ,EAAMK,OACbC,KAAK,SACLC,KAAK,OACLC,UAAU,eACVC,YAAY,aACZC,GAAG,iBCZTC,EAAS,CACXC,UAAW,UAsCEC,E,4JAlCb,WACE,OAAIC,KAAKd,MAAMe,UAAU,GAErB,wBAAOP,UAAU,aAAaQ,MAAOL,EAArC,UACE,wBAAQH,UAAU,kBAAlB,SACE,qBAAIA,UAAU,MAAd,UACE,oBAAIA,UAAU,WAAd,mBACA,oBAAIA,UAAU,WAAd,kBACA,oBAAIA,UAAU,WAAd,mBACA,oBAAIA,UAAU,WAAd,mBACA,oBAAIA,UAAU,WAAd,sBAGJ,gCACGM,KAAKd,MAAMe,UAAUE,KAAI,SAACC,EAAUC,GAAX,OACxB,+BACE,6BACE,qBAAKC,IAAKF,EAASG,QAAQC,UAAWC,IAAM,OAE9C,mCAAML,EAASZ,KAAKkB,MAAQ,IAAMN,EAASZ,KAAKmB,QAChD,mCAAMP,EAASQ,SACf,mCAAMR,EAASS,SACf,mCAAMT,EAASU,IAAIC,UAPZV,WAcV,8D,GA9BcW,IAAMC,W,gBCAlB,EACR,WACH,OAAOC,IAAMC,IAND,kDCIZtB,EAAS,CACXuB,gBAAiB,aACjBC,QAAS,OACTC,eAAgB,SAChBC,QAAS,OACTC,aAAc,OACdC,MAAO,SA0EMC,E,4MAtEbC,MAAQ,CACN1B,UAAW,GACX2B,cAAe,I,EAajBC,YAAc,WACZC,IACGC,MAAK,SAACC,GACLA,EAAIC,KAAKC,QAAQC,KAAK,EAAKC,SAC3B,EAAKC,SAAL,2BACK,EAAKV,OADV,IAEE1B,UAAW+B,EAAIC,KAAKC,QACpBN,cAAeI,EAAIC,KAAKC,WAE1BI,QAAQC,IAAI,EAAKZ,MAAMC,kBAExBY,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,O,EAIhCpD,kBAAoB,SAACqD,GACnB,IAAIpD,EAAQoD,EAAMC,OAAOrD,MAAMsD,cAE/B,GADAN,QAAQC,IAAIjD,GACRA,EAAMuD,OAAS,EAAG,CACpB,IAAIC,EAAoB,EAAKnB,MAAM1B,UAAU8C,QAAO,SAAC3C,GACnD,SACEA,EAASZ,KAAKkB,MAAMkC,cAAcI,SAAS1D,IAC3Cc,EAASZ,KAAKmB,KAAKiC,cAAcI,SAAS1D,IAC1Cc,EAASQ,MAAMgC,cAAcI,SAAS1D,IACtCc,EAASS,MAAM+B,cAAcI,SAAS1D,IACtCc,EAASU,IAAIC,KAAK6B,cAAcI,SAAS1D,KAElCc,KAKX,EAAKiC,SAAL,2BAAmB,EAAKV,OAAxB,IAA+B1B,UAAW6C,UAE1C,EAAKT,SAAL,2BAAmB,EAAKV,OAAxB,IAA+B1B,UAAW,EAAK0B,MAAMC,iBAEvDU,QAAQC,IAAI,EAAKZ,MAAM1B,Y,uDA9CzB,WACED,KAAK6B,gB,qBAGP,SAAQoB,EAAGC,GACT,IAAIC,EAAQF,EAAEzD,KAAKkB,MAAM0C,cACrBC,EAAQH,EAAE1D,KAAKkB,MAAM0C,cACzB,OAAOD,EAAQE,GAAS,EAAIF,EAAQE,EAAQ,EAAI,I,oBA0ClD,WACE,OACE,gCACE,wBAAQnD,MAAOL,EAAf,SACE,sDAEF,cAAC,EAAD,CACEN,OAAQS,KAAK2B,MAAMpC,OACnBF,kBAAmBW,KAAKX,oBAE1B,cAAC,EAAD,CAAcY,UAAWD,KAAK2B,MAAM1B,mB,GAjEZe,IAAMC,W,MCLvBqC,MANf,WACE,OACE,cAAC,EAAD,K,MCCJC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.628c1ea2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeForm(props) {\r\n  return (\r\n    <form>\r\n      <div>\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.search}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"SearchName\"\r\n          id=\"search\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EmployeeForm;\r\n","import React from \"react\";\r\n\r\nlet styles = {\r\n  textAlign: \"center\",\r\n};\r\n\r\nclass EmployeeList extends React.Component {\r\n  render() {\r\n    if (this.props.employees[0]) {\r\n      return (\r\n        <table className=\"list-group\" style={styles}>\r\n          <thread className=\"list-group-item\">\r\n            <tr className=\"row\">\r\n              <th className=\"col-lg-2\">Image</th>\r\n              <th className=\"col-lg-2\">Name</th>\r\n              <th className=\"col-lg-3\">Email</th>\r\n              <th className=\"col-lg-3\">Phone</th>\r\n              <th className=\"col-lg-2\">DOB</th>\r\n            </tr>\r\n          </thread>\r\n          <tbody>\r\n            {this.props.employees.map((employee, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img src={employee.picture.thumbnail} alt = \"\"/>\r\n                </td>\r\n                <td> {employee.name.first + \" \" + employee.name.last}</td>\r\n                <td> {employee.email}</td>\r\n                <td> {employee.phone}</td>\r\n                <td> {employee.dob.date}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    } else {\r\n      return <>Employee not found</>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default EmployeeList;\r\n","import axios from \"axios\";\r\n\r\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=us\";\r\n\r\n\r\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\r\nexport default {\r\n  get: function () {\r\n    return axios.get(BASEURL);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport EmployeeList from \"./EmployeeList\";\r\nimport API from \"../utils/API\";\r\nimport axios from \"axios\";\r\n\r\nlet styles = {\r\n  backgroundColor: \"DodgerBlue\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  padding: \"25px\",\r\n  marginBottom: \"20px\",\r\n  color: \"white\",\r\n};\r\n\r\nclass EmployeeContainer extends React.Component {\r\n  state = {\r\n    employees: [],\r\n    employeesList: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEmployee();\r\n  }\r\n\r\n  sortArr(a, b) {\r\n    var textA = a.name.first.toUpperCase();\r\n    var textB = b.name.first.toUpperCase();\r\n    return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n  }\r\n\r\n  getEmployee = () => {\r\n    API.get()\r\n      .then((res) => {\r\n        res.data.results.sort(this.sortArr);\r\n        this.setState({\r\n          ...this.state,\r\n          employees: res.data.results,\r\n          employeesList: res.data.results,\r\n        });\r\n        console.log(this.state.employeesList);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n\r\n  handleInputChange = (event) => {\r\n    let value = event.target.value.toLowerCase();\r\n    console.log(value);\r\n    if (value.length > 0) {\r\n      let filteredEmployees = this.state.employees.filter((employee) => {\r\n        if (\r\n          employee.name.first.toLowerCase().includes(value) ||\r\n          employee.name.last.toLowerCase().includes(value) ||\r\n          employee.email.toLowerCase().includes(value) ||\r\n          employee.phone.toLowerCase().includes(value) ||\r\n          employee.dob.date.toLowerCase().includes(value)\r\n        ) {\r\n          return employee;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n      this.setState({ ...this.state, employees: filteredEmployees });\r\n    } else {\r\n      this.setState({ ...this.state, employees: this.state.employeesList });\r\n    }\r\n    console.log(this.state.employees);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header style={styles}>\r\n          <h1>Employee Directory</h1>\r\n        </header>\r\n        <EmployeeForm\r\n          search={this.state.search}\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <EmployeeList employees={this.state.employees} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeContainer;\r\n","import React from \"react\";\nimport EmployeeContainer from \"./components/EmployeeContainer\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <EmployeeContainer />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}